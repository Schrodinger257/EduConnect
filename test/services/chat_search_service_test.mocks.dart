// Mocks generated by Mockito 5.4.6 from annotations
// in educonnect/test/services/chat_search_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:cloud_firestore/cloud_firestore.dart' as _i8;
import 'package:educonnect/core/result.dart' as _i4;
import 'package:educonnect/modules/chat.dart' as _i5;
import 'package:educonnect/modules/message.dart' as _i7;
import 'package:educonnect/repositories/chat_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ChatRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatRepository extends _i1.Mock implements _i2.ChatRepository {
  MockChatRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.Chat>> createChat(_i5.Chat? chat) =>
      (super.noSuchMethod(
            Invocation.method(#createChat, [chat]),
            returnValue: _i3.Future<_i4.Result<_i5.Chat>>.value(
              _i6.dummyValue<_i4.Result<_i5.Chat>>(
                this,
                Invocation.method(#createChat, [chat]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Chat>>);

  @override
  _i3.Future<_i4.Result<_i5.Chat>> getChatById(String? chatId) =>
      (super.noSuchMethod(
            Invocation.method(#getChatById, [chatId]),
            returnValue: _i3.Future<_i4.Result<_i5.Chat>>.value(
              _i6.dummyValue<_i4.Result<_i5.Chat>>(
                this,
                Invocation.method(#getChatById, [chatId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Chat>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Chat>>> getUserChats(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserChats, [userId]),
            returnValue: _i3.Future<_i4.Result<List<_i5.Chat>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Chat>>>(
                this,
                Invocation.method(#getUserChats, [userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Chat>>>);

  @override
  _i3.Stream<List<_i5.Chat>> getUserChatsStream(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getUserChatsStream, [userId]),
            returnValue: _i3.Stream<List<_i5.Chat>>.empty(),
          )
          as _i3.Stream<List<_i5.Chat>>);

  @override
  _i3.Future<_i4.Result<_i5.Chat>> updateChat(_i5.Chat? chat) =>
      (super.noSuchMethod(
            Invocation.method(#updateChat, [chat]),
            returnValue: _i3.Future<_i4.Result<_i5.Chat>>.value(
              _i6.dummyValue<_i4.Result<_i5.Chat>>(
                this,
                Invocation.method(#updateChat, [chat]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Chat>>);

  @override
  _i3.Future<_i4.Result<void>> deleteChat(String? chatId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteChat, [chatId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#deleteChat, [chatId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> addParticipant(String? chatId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#addParticipant, [chatId, userId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#addParticipant, [chatId, userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> removeParticipant(
    String? chatId,
    String? userId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeParticipant, [chatId, userId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#removeParticipant, [chatId, userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<_i7.Message>> sendMessage(_i7.Message? message) =>
      (super.noSuchMethod(
            Invocation.method(#sendMessage, [message]),
            returnValue: _i3.Future<_i4.Result<_i7.Message>>.value(
              _i6.dummyValue<_i4.Result<_i7.Message>>(
                this,
                Invocation.method(#sendMessage, [message]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i7.Message>>);

  @override
  _i3.Future<_i4.Result<List<_i7.Message>>> getMessages({
    required String? chatId,
    int? limit = 50,
    _i8.DocumentSnapshot<Object?>? lastDocument,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getMessages, [], {
              #chatId: chatId,
              #limit: limit,
              #lastDocument: lastDocument,
            }),
            returnValue: _i3.Future<_i4.Result<List<_i7.Message>>>.value(
              _i6.dummyValue<_i4.Result<List<_i7.Message>>>(
                this,
                Invocation.method(#getMessages, [], {
                  #chatId: chatId,
                  #limit: limit,
                  #lastDocument: lastDocument,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i7.Message>>>);

  @override
  _i3.Stream<List<_i7.Message>> getMessagesStream(
    String? chatId, {
    int? limit = 50,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getMessagesStream, [chatId], {#limit: limit}),
            returnValue: _i3.Stream<List<_i7.Message>>.empty(),
          )
          as _i3.Stream<List<_i7.Message>>);

  @override
  _i3.Future<_i4.Result<void>> updateMessageStatus({
    required String? messageId,
    required _i7.MessageStatus? status,
    DateTime? timestamp,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateMessageStatus, [], {
              #messageId: messageId,
              #status: status,
              #timestamp: timestamp,
            }),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#updateMessageStatus, [], {
                  #messageId: messageId,
                  #status: status,
                  #timestamp: timestamp,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> markMessagesAsRead({
    required String? chatId,
    required String? userId,
    required List<String>? messageIds,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#markMessagesAsRead, [], {
              #chatId: chatId,
              #userId: userId,
              #messageIds: messageIds,
            }),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#markMessagesAsRead, [], {
                  #chatId: chatId,
                  #userId: userId,
                  #messageIds: messageIds,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> updateUnreadCount({
    required String? chatId,
    required String? userId,
    required int? count,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateUnreadCount, [], {
              #chatId: chatId,
              #userId: userId,
              #count: count,
            }),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#updateUnreadCount, [], {
                  #chatId: chatId,
                  #userId: userId,
                  #count: count,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<int>> getTotalUnreadCount(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getTotalUnreadCount, [userId]),
            returnValue: _i3.Future<_i4.Result<int>>.value(
              _i6.dummyValue<_i4.Result<int>>(
                this,
                Invocation.method(#getTotalUnreadCount, [userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<int>>);

  @override
  _i3.Future<_i4.Result<List<_i7.Message>>> searchMessages({
    required String? chatId,
    required String? query,
    int? limit = 20,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchMessages, [], {
              #chatId: chatId,
              #query: query,
              #limit: limit,
            }),
            returnValue: _i3.Future<_i4.Result<List<_i7.Message>>>.value(
              _i6.dummyValue<_i4.Result<List<_i7.Message>>>(
                this,
                Invocation.method(#searchMessages, [], {
                  #chatId: chatId,
                  #query: query,
                  #limit: limit,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i7.Message>>>);

  @override
  _i3.Future<_i4.Result<_i7.Message>> getMessageById(String? messageId) =>
      (super.noSuchMethod(
            Invocation.method(#getMessageById, [messageId]),
            returnValue: _i3.Future<_i4.Result<_i7.Message>>.value(
              _i6.dummyValue<_i4.Result<_i7.Message>>(
                this,
                Invocation.method(#getMessageById, [messageId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i7.Message>>);

  @override
  _i3.Future<_i4.Result<void>> deleteMessage(String? messageId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteMessage, [messageId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#deleteMessage, [messageId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<_i7.Message>> updateMessage(_i7.Message? message) =>
      (super.noSuchMethod(
            Invocation.method(#updateMessage, [message]),
            returnValue: _i3.Future<_i4.Result<_i7.Message>>.value(
              _i6.dummyValue<_i4.Result<_i7.Message>>(
                this,
                Invocation.method(#updateMessage, [message]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i7.Message>>);

  @override
  _i3.Future<_i4.Result<void>> archiveChat(String? chatId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#archiveChat, [chatId, userId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#archiveChat, [chatId, userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> unarchiveChat(String? chatId, String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#unarchiveChat, [chatId, userId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#unarchiveChat, [chatId, userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Stream<List<String>> getTypingIndicators(String? chatId) =>
      (super.noSuchMethod(
            Invocation.method(#getTypingIndicators, [chatId]),
            returnValue: _i3.Stream<List<String>>.empty(),
          )
          as _i3.Stream<List<String>>);

  @override
  _i3.Future<_i4.Result<void>> setTypingIndicator({
    required String? chatId,
    required String? userId,
    required bool? isTyping,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#setTypingIndicator, [], {
              #chatId: chatId,
              #userId: userId,
              #isTyping: isTyping,
            }),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#setTypingIndicator, [], {
                  #chatId: chatId,
                  #userId: userId,
                  #isTyping: isTyping,
                }),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<_i7.Message>> retryMessage(String? messageId) =>
      (super.noSuchMethod(
            Invocation.method(#retryMessage, [messageId]),
            returnValue: _i3.Future<_i4.Result<_i7.Message>>.value(
              _i6.dummyValue<_i4.Result<_i7.Message>>(
                this,
                Invocation.method(#retryMessage, [messageId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i7.Message>>);

  @override
  _i3.Future<_i4.Result<Map<String, _i7.MessageStatus>>>
  getMessageDeliveryStatus(String? messageId) =>
      (super.noSuchMethod(
            Invocation.method(#getMessageDeliveryStatus, [messageId]),
            returnValue:
                _i3.Future<_i4.Result<Map<String, _i7.MessageStatus>>>.value(
                  _i6.dummyValue<_i4.Result<Map<String, _i7.MessageStatus>>>(
                    this,
                    Invocation.method(#getMessageDeliveryStatus, [messageId]),
                  ),
                ),
          )
          as _i3.Future<_i4.Result<Map<String, _i7.MessageStatus>>>);
}
